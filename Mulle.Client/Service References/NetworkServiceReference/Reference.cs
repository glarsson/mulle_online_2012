//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mulle.Client.NetworkServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterStatus", Namespace="http://schemas.datacontract.org/2004/07/Mulle.AzureServiceHost")]
    public enum RegisterStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailInUse = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AliasInUse = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerContract", Namespace="http://schemas.datacontract.org/2004/07/Mulle.AzureServiceHost")]
    [System.SerializableAttribute()]
    public partial class PlayerContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReputationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias {
            get {
                return this.AliasField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasField, value) != true)) {
                    this.AliasField = value;
                    this.RaisePropertyChanged("Alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameId {
            get {
                return this.GameIdField;
            }
            set {
                if ((this.GameIdField.Equals(value) != true)) {
                    this.GameIdField = value;
                    this.RaisePropertyChanged("GameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Loss {
            get {
                return this.LossField;
            }
            set {
                if ((this.LossField.Equals(value) != true)) {
                    this.LossField = value;
                    this.RaisePropertyChanged("Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Reputation {
            get {
                return this.ReputationField;
            }
            set {
                if ((this.ReputationField.Equals(value) != true)) {
                    this.ReputationField = value;
                    this.RaisePropertyChanged("Reputation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Win {
            get {
                return this.WinField;
            }
            set {
                if ((this.WinField.Equals(value) != true)) {
                    this.WinField = value;
                    this.RaisePropertyChanged("Win");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NetworkServiceReference.INetworkService", CallbackContract=typeof(Mulle.Client.NetworkServiceReference.INetworkServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface INetworkService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/Login", ReplyAction="http://tempuri.org/INetworkService/LoginResponse")]
        bool Login(string alias, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/Logout", ReplyAction="http://tempuri.org/INetworkService/LogoutResponse")]
        void Logout(string alias, int reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/Register", ReplyAction="http://tempuri.org/INetworkService/RegisterResponse")]
        Mulle.Client.NetworkServiceReference.RegisterStatus Register(string alias, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/PlayerToServerChat", ReplyAction="http://tempuri.org/INetworkService/PlayerToServerChatResponse")]
        void PlayerToServerChat(string alias, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/PlayerToServerGameChat", ReplyAction="http://tempuri.org/INetworkService/PlayerToServerGameChatResponse")]
        void PlayerToServerGameChat(string alias, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/GetPlayerDetails", ReplyAction="http://tempuri.org/INetworkService/GetPlayerDetailsResponse")]
        Mulle.Client.NetworkServiceReference.PlayerContract GetPlayerDetails(string alias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/GetAllConnectedPlayers", ReplyAction="http://tempuri.org/INetworkService/GetAllConnectedPlayersResponse")]
        System.Collections.Generic.List<Mulle.Client.NetworkServiceReference.PlayerContract> GetAllConnectedPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/UploadProfilePicture", ReplyAction="http://tempuri.org/INetworkService/UploadProfilePictureResponse")]
        bool UploadProfilePicture(string alias, byte[] profilePicByteStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/DownloadProfilePicture", ReplyAction="http://tempuri.org/INetworkService/DownloadProfilePictureResponse")]
        byte[] DownloadProfilePicture(string alias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/PlayerToServerRequestGame", ReplyAction="http://tempuri.org/INetworkService/PlayerToServerRequestGameResponse")]
        void PlayerToServerRequestGame(string requestedAlias, string requestorAlias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/PlayerToServerConfirmGame", ReplyAction="http://tempuri.org/INetworkService/PlayerToServerConfirmGameResponse")]
        void PlayerToServerConfirmGame(string requestorAlias, string requestedAlias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/RequestMainTableCards", ReplyAction="http://tempuri.org/INetworkService/RequestMainTableCardsResponse")]
        System.Collections.Generic.List<Mulle.Lib.Cards.Card> RequestMainTableCards(string alias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INetworkService/RequestPlayerHand", ReplyAction="http://tempuri.org/INetworkService/RequestPlayerHandResponse")]
        System.Collections.Generic.List<Mulle.Lib.Cards.Card> RequestPlayerHand(string alias);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INetworkServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INetworkService/ServerToPlayerChat")]
        void ServerToPlayerChat(string alias, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INetworkService/ServerToPlayerGameChat")]
        void ServerToPlayerGameChat(string alias, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INetworkService/ServerToPlayerAnnouncement")]
        void ServerToPlayerAnnouncement(string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INetworkService/PushConnectedPlayers")]
        void PushConnectedPlayers(System.Collections.Generic.List<string> players);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INetworkService/ServerToPlayerRequestGame")]
        void ServerToPlayerRequestGame(string requestorAlias);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/INetworkService/ServerToPlayerStartGame")]
        void ServerToPlayerStartGame(string firstPlayer, string secondPlayer, int gameId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INetworkServiceChannel : Mulle.Client.NetworkServiceReference.INetworkService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NetworkServiceClient : System.ServiceModel.DuplexClientBase<Mulle.Client.NetworkServiceReference.INetworkService>, Mulle.Client.NetworkServiceReference.INetworkService {
        
        public NetworkServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public NetworkServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public NetworkServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NetworkServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public NetworkServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Login(string alias, string password) {
            return base.Channel.Login(alias, password);
        }
        
        public void Logout(string alias, int reason) {
            base.Channel.Logout(alias, reason);
        }
        
        public Mulle.Client.NetworkServiceReference.RegisterStatus Register(string alias, string email, string password) {
            return base.Channel.Register(alias, email, password);
        }
        
        public void PlayerToServerChat(string alias, string message) {
            base.Channel.PlayerToServerChat(alias, message);
        }
        
        public void PlayerToServerGameChat(string alias, string message) {
            base.Channel.PlayerToServerGameChat(alias, message);
        }
        
        public Mulle.Client.NetworkServiceReference.PlayerContract GetPlayerDetails(string alias) {
            return base.Channel.GetPlayerDetails(alias);
        }
        
        public System.Collections.Generic.List<Mulle.Client.NetworkServiceReference.PlayerContract> GetAllConnectedPlayers() {
            return base.Channel.GetAllConnectedPlayers();
        }
        
        public bool UploadProfilePicture(string alias, byte[] profilePicByteStream) {
            return base.Channel.UploadProfilePicture(alias, profilePicByteStream);
        }
        
        public byte[] DownloadProfilePicture(string alias) {
            return base.Channel.DownloadProfilePicture(alias);
        }
        
        public void PlayerToServerRequestGame(string requestedAlias, string requestorAlias) {
            base.Channel.PlayerToServerRequestGame(requestedAlias, requestorAlias);
        }
        
        public void PlayerToServerConfirmGame(string requestorAlias, string requestedAlias) {
            base.Channel.PlayerToServerConfirmGame(requestorAlias, requestedAlias);
        }
        
        public System.Collections.Generic.List<Mulle.Lib.Cards.Card> RequestMainTableCards(string alias) {
            return base.Channel.RequestMainTableCards(alias);
        }
        
        public System.Collections.Generic.List<Mulle.Lib.Cards.Card> RequestPlayerHand(string alias) {
            return base.Channel.RequestPlayerHand(alias);
        }
    }
}
